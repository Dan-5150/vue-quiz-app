import{G as i}from"./index-DXzsqR7n.js";import{u as n}from"./questions-Bzw07epI.js";var o=(e=>(e.definedOrder="defined-order",e.alphabeticalOrder="alphabetical-order",e.questionTypeOrder="question-type-order",e))(o||{});const d=i("quiz",{state:()=>({user:{name:"",age:null},sortOrder:o.definedOrder,sortedQuestions:[]}),getters:{questions:()=>n().questions},actions:{updateUser(e){this.user=e},updateSortOrder(e){this.sortOrder=e},clearUserInfo(){this.user={name:"",age:null}},addQuizResult(e){this.sortedQuestions[e.index].isCorrect=e.isCorrect,this.sortedQuestions[e.index].response=e.response},sortQuizResults(){this.sortedQuestions.sort((e,s)=>e.isCorrect<s.isCorrect&&1||-1)},clearQuizResults(){this.sortedQuestions=[]},async fetchUserAge(e){const s=await fetch(`https://api.agify.io/?name=${e.name}`),t=await s.json();if(!s.ok)throw new Error(t.message);const r={name:e.name,age:t.age};this.user=r},sortQuestions(e){this.sortedQuestions=[];const s=this.questions.map(t=>({...t,isCorrect:!1,response:""}));e===o.definedOrder?this.sortedQuestions=s:e===o.alphabeticalOrder?(this.sortedQuestions=s,this.sortedQuestions.sort((t,r)=>t.question.localeCompare(r.question))):e===o.questionTypeOrder&&(this.sortedQuestions=s,this.sortedQuestions.sort((t,r)=>t.questionType.localeCompare(r.questionType)))}}});export{o as S,d as u};
