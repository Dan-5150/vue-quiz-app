import{G as i}from"./index-ByPbS12K.js";import{u as n}from"./questions-IAIGAdGp.js";var o=(e=>(e.alphabeticalOrder="alphabetical-order",e.definedOrder="defined-order",e.questionTypeOrder="question-type-order",e))(o||{});const d=i("quiz",{state:()=>({user:{name:"",age:null},sortOrder:o.definedOrder,sortedQuestions:[]}),getters:{questions:()=>n().questions},actions:{updateUser(e){this.user=e},updateSortOrder(e){this.sortOrder=e},clearUserInfo(){this.user={name:"",age:null}},addQuizResult(e){this.sortedQuestions[e.index].isCorrect=e.isCorrect,this.sortedQuestions[e.index].response=e.response},sortQuizResults(){this.sortedQuestions.sort((e,t)=>e.isCorrect<t.isCorrect&&1||-1)},clearQuizResults(){this.sortedQuestions=[]},async fetchUserAge(e){const t=await fetch(`https://api.agify.io/?name=${e.name}`),s=await t.json();if(!t.ok||s.age===null)throw new Error(s.message);const r={name:e.name,age:s.age};this.user=r},sortQuestions(e){this.sortedQuestions=[];const t=this.questions.map(s=>({...s,isCorrect:!1,response:""}));e===o.definedOrder?this.sortedQuestions=t:e===o.alphabeticalOrder?(this.sortedQuestions=t,this.sortedQuestions.sort((s,r)=>s.question.localeCompare(r.question))):e===o.questionTypeOrder&&(this.sortedQuestions=t,this.sortedQuestions.sort((s,r)=>s.questionType.localeCompare(r.questionType)))}}});export{o as S,d as u};
