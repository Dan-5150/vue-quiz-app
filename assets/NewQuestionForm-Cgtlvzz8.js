import{d as y,c as l,w as a,b as w,o as h,f as g,u as q,h as _}from"./index-ByPbS12K.js";import{P as b,Q as x}from"./QuestionForm-CCwcdXkj.js";import{Q as r}from"./QuestionType-B2p6nuUK.js";import{u as Q}from"./questions-IAIGAdGp.js";const t=[];for(let e=0;e<256;++e)t.push((e+256).toString(16).slice(1));function U(e,n=0){return(t[e[n+0]]+t[e[n+1]]+t[e[n+2]]+t[e[n+3]]+"-"+t[e[n+4]]+t[e[n+5]]+"-"+t[e[n+6]]+t[e[n+7]]+"-"+t[e[n+8]]+t[e[n+9]]+"-"+t[e[n+10]]+t[e[n+11]]+t[e[n+12]]+t[e[n+13]]+t[e[n+14]]+t[e[n+15]]).toLowerCase()}let i;const T=new Uint8Array(16);function R(){if(!i){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");i=crypto.getRandomValues.bind(crypto)}return i(T)}const C=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),p={randomUUID:C};function d(e,n,c){if(p.randomUUID&&!e)return p.randomUUID();e=e||{};const s=e.random??e.rng?.()??R();if(s.length<16)throw new Error("Random bytes length must be >= 16");return s[6]=s[6]&15|64,s[8]=s[8]&63|128,U(s)}const F=y({__name:"NewQuestionForm",setup(e){const n=Q(),c=_(),s=o=>{if(o.questionType===r.text){const u={id:d(),question:o.question,questionType:o.questionType,answer:o.answer};n.newQuestion(u)}else if(o.questionType===r.multipleChoice){const u={id:d(),question:o.question,questionType:o.questionType,choices:o.choices};n.newQuestion(u)}c.replace("/questions")};return(o,u)=>{const m=w("base-card");return h(),l(m,{classes:"card-sm text-left"},{default:a(()=>[g(x,{"process-type":q(b).new,onQuestionForm:s},null,8,["process-type"])]),_:1})}}});export{F as default};
